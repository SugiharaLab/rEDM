


MatrixXd covMat = MatrixXd::Zero(effective_nn, effective_nn);
debug_print( covMat, 5, "CovMat zeros" );
	
//The covariance matrix, should use different covariance function
for(size_t i = 0; i < effective_nn; ++i) 
  for(size_t j = 0; j < effective_nn; ++j)
    if ( i == j ) 
      covMat(i,j) = i + 0.0; //exp( -distances[nearest_neighbors[i]][nearest_neighbors[j]]/avg_distance);      

debug_print( covMat, 5, "CovMat initialized" );
//Find the Cholesky factor, so that covMat = LL^t 
MatrixXd L = covMat.llt().matrixL();
debug_print( L, 5, "L" );
// YAIR END
